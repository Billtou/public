# -------------------------------------------------------------------------------------
# -            小技巧提醒
# - 要把HA entity 的 state 或 attribute 調用過來必須依據state的特性選擇不同的 感測器 platform
# - 例如switch 類的 light 基本上只有 on/off 用 binary_sensor: platform
# - climate cover 類的 他的state 是 open cool 用 text_sensor: platform
# - 溫溼度或是電燈亮度等等用 sensor:  platform
# --------------------------------------------------------------------------------------
# -----------------------------------------------------------------------
# - 把客廳的冷氣entity 溫度屬性呼叫過來轉成 id: lvgl_arc_aircon_set_temp
#   當數據變動時更新到屏幕裡面lvgl的arc(弧線)以及label(文字)，
#   這裡要注意lvgl_arc_aircon_set_temp，lvgl_label_aircon_set_temp_text 這兩個id一旦建立，
#   編譯時lvgl畫面必須要有定義，否則無法連動會報錯
# -----------------------------------------------------------------------
sensor: # 感測器類別
  - platform: homeassistant
    id: livingroom_aircon_set_temp_a
    entity_id: ${livingroom_climate}
    attribute: temperature
    accuracy_decimals: 0
    on_value:
      - lvgl.arc.update:
          id: lvgl_arc_aircon_set_temp  #這個ID要對應到lvgl的widgets使用
          value: !lambda 'return x;'
      - lvgl.label.update:
          id: lvgl_label_aircon_set_temp_text #這個ID要對應到lvgl的widgets使用
          text:
            format: "%.0f°"
            args: [ 'x' ]


# -----------------------------------------------------------------------
# - 這裡重複了一次抓溫度的動作因為螢幕另一個button同樣需要反饋溫度變化
#   這裡的是配對的，一個id對應一個lvgl的應用，不能一個id 給兩個不同的"小部件"使用
# ---------------------------------------------------------------------
  - platform: homeassistant
    entity_id: ${livingroom_climate}
    attribute: temperature
    id: aircon_set_temp_2
    accuracy_decimals: 0
    on_value:
      - lvgl.label.update:
          id: lvgl_label_aircon_temp_for_button #同一個溫度數據供不同widgets使用
          text:
            format: "%.0f°"
            args: [ 'x' ]
            
  - platform: homeassistant
    entity_id: ${livingroom_climate}
    attribute: current_temperature
    id: aircon_current_temp
    accuracy_decimals: 0
    on_value:
      - lvgl.label.update:
          id: lvgl_label_aircon_current_temp  #同一個溫度數據供不同widgets使用
          text:
            format: "%.0f°"
            args: [ 'x' ]  

  - platform: homeassistant
    entity_id: ${livingroom_climate}
    attribute: current_humidity  #抓冷氣裡面濕度屬性出來備用
    id: aircon_current_humi
    accuracy_decimals: 0
    on_value:
      - lvgl.label.update:
          id: lgvl_label_aircon_now_humi
          text:
            format: "%.0f%%"
            args: [ 'x' ]

# -----------------------------------------------------------------------
# -  text_sensor 文字類別sensor，抓HA 冷氣的 state 
text_sensor:
  - platform: homeassistant
    name: "Living Room Climate Current State"
    id: livingroom_climate_current_state
    entity_id: ${livingroom_climate}
    on_value:
      then:
        - if:
            condition:
              lambda: 'return x != "off";'
            then:
              - lvgl.button.update:
                  id: lvgl_widget_aircon_current_state      
                  state:
                    checked: true
            else:
              - lvgl.button.update:
                  id: lvgl_widget_aircon_current_state      
                  state:
                    checked: false

  - platform: homeassistant
    entity_id: ${livingroom_climate}
    id: livingroom_aircon_mode
    on_value:      
      - lvgl.label.update: 
          id: lvgl_label_aircon_mode
          text:
            format: "%s"
            args: [ x.c_str() ]
      - if:
          condition:
            lambda: 'return id(livingroom_aircon_mode).state == "cool";'
          then:
            - lvgl.label.update: 
                id: lvgl_label_aircon_mode
                text: "冷氣"
      - if:
          condition:
            lambda: 'return id(livingroom_aircon_mode).state == "dry";'
          then:
            - lvgl.label.update: 
                id: lvgl_label_aircon_mode
                text: "除濕"
      - if:
          condition:
            lambda: 'return id(livingroom_aircon_mode).state == "fan_only";'
          then:
            - lvgl.label.update: 
                id: lvgl_label_aircon_mode
                text: "送風"
            
      - if:
          condition:
            lambda: 'return id(livingroom_aircon_mode).state == "off";'
          then:
            - lvgl.label.update: 
                id: lvgl_label_aircon_mode
                text: "關閉" 