# --------------------------------------
# -            HARDWARE  勿動              -
# --------------------------------------
psram:
  speed: 80MHz
  mode: octal

i2c:
  sda: 15
  scl: 6
  scan: true
  frequency: 400kHz

spi:    #required only for libraries

# --------------------------------------
# -            DISPLAY 屏幕驅動勿動
# --------------------------------------

display:
  - platform: gc9503v
    model: PANLEE  # 或 VIEWE
    id: my_display
    dimensions:
      width: 480
      height: 480
    de_pin:
      number: 40
      inverted: False
    hsync_pin:
      number: 42
      inverted: False
    vsync_pin:
      number: 41
      inverted: false
      allow_other_uses: true
    pclk_pin: 39
    pclk_inverted: false
    hsync_pulse_width: 10
    hsync_front_porch: 8
    hsync_back_porch: 40
    vsync_pulse_width: 10
    vsync_front_porch: 8
    vsync_back_porch: 40
    data_pins:
      red:
        - 18         # R1
        - 8          # R2
        - 3          # R3
        - 46         # R4
        - 10         # R5
      green:
        - 14         # G0
        - 13         # G1
        - 12         # G2
        - 11         # G3
        - 16         # G4
        - 17         # G5 
      blue:
        - number: 45 # B1
          allow_other_uses: true
        - number: 48 # B2
          allow_other_uses: true
        - 47         # B3
        - 0          # B4
        - 21         # B5
    enable_pin:
      number: 38
      inverted: false
    reset_pin:
      number: 41
      inverted: false
      allow_other_uses: true
    sclk_pin:
      number: 45
      allow_other_uses: true
    mosi_pin:
      number: 48
      allow_other_uses: true
    color_order: RGB  

touchscreen:
  - platform: ft63x6
    interrupt_pin: 4
    id: my_touchscreen
    calibration:
      x_min: 0
      x_max: 480
      y_min: 0
      y_max: 480
    on_touch:  #當偵測到使用者正在觸控時執行這段
      - logger.log:
          format: Touch at (%d, %d) [%d, %d]
          args: [touch.x, touch.y, touch.x_raw, touch.y_raw]
    on_release: #點擊屏幕時調整亮度
      - light.turn_on:
          id: display_backlight
          brightness: !lambda 'return id(backlight_brightness).state / 100.0;'  #依據指定數據亮屏
      - if:
          condition: lvgl.is_paused #睡眠喚起
          then:
            - logger.log: "LVGL resuming"
            - lvgl.page.show: main_page_type_a   #閉屏觸發亮屏導航到此頁面  ***** 這裡可以調整喜歡的頁面 ********          
            - lvgl.resume:  #讓螢幕開始反應並更新畫面
            - lvgl.widget.redraw: #強制所有 widget 重繪，以確保畫面內容在 resume 後立即更新。


# ---------------------------------------------
# -          燒屏的switch 避免屏木烙印的機制的開關 勿動
# ---------------------------------------------
switch:
  - platform: template
    name: Antiburn
    id: switch_antiburn
    icon: mdi:television-shimmer
    optimistic: true
    entity_category: "config"
    turn_on_action:
      - logger.log: "Starting Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:
      - lvgl.pause:
          show_snow: true
      # - lvgl.widget.update:
      #     id: lvgl_switch_antiburn
      #     state:
      #       checked: true
    turn_off_action:
      - logger.log: "Stopping Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:
      # - lvgl.widget.update:
      #     id: lvgl_switch_antiburn
      #     state:
      #       checked: false

# --------------------------------------
# 自動燒屏的程序 凌晨2,3,4,5點零5分到35分自動花屏避免烙印  勿動
# --------------------------------------
time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - hours: 2,3,4,5
        minutes: 5
        seconds: 0
        then:
          - switch.turn_on: switch_antiburn
      - hours: 2,3,4,5
        minutes: 35
        seconds: 0
        then:
          - switch.turn_off: switch_antiburn    

# --------------------------------------
# 主屏最上層右下角時間的entity 每分鐘更新一次
# --------------------------------------     
  - platform: sntp
    id: my_sntp_time
    timezone: 'Asia/Taipei'
    update_interval: 6h
    servers:
      - "time.stdtime.gov.tw"
      - "time.asia.apple.com"
      - "time.google.com"    
    on_time:
      - minutes: /1
        then:
          - lambda: |-
              char buff[8];
              time_t now;
              struct tm timeinfo;
              ::time(&now);
              localtime_r(&now, &timeinfo);
              snprintf(buff, sizeof(buff), "%02d:%02d", timeinfo.tm_hour, timeinfo.tm_min);
              lv_label_set_text(id(local_time), buff);
# --------------------------------------
# -   背光螢幕LED entity
# --------------------------------------
output:
  - platform: ledc
    pin: 5
    id: backlight_led
    frequency: 5000Hz

light:
  - platform: monochromatic
    output: backlight_led
    name: "Backlight"
    id: display_backlight
    restore_mode: ALWAYS_ON

# --------------------------------------
# -   調整背光螢幕的亮度 UI entity
# --------------------------------------
number:
  - platform: template
    optimistic: true
    id: backlight_brightness
    unit_of_measurement: "%"
    restore_value: true
    initial_value: 50
    min_value: 5
    max_value: 100
    step: 5
    mode: box
    on_value:
      then:
        - lvgl.slider.update: 
            id: backlight_slide_brightness
            value: !lambda return x;
        - light.turn_on:
            id: display_backlight
            brightness: !lambda 'return x / 100.0;'
# --------------------------------------
# -   調整關閉屏幕的秒數 UI entity
# --------------------------------------
  - platform: template
    name: Screen timeout
    optimistic: true
    id: display_timeout
    unit_of_measurement: "s"
    initial_value: 45
    restore_value: true
    min_value: 10
    max_value: 180
    step: 5
    mode: box
    on_value:
      then:
        - lvgl.slider.update: 
            id: lvgl_display_timeout
            value: !lambda return x;
