# --------------------------------------
# -            esphome必要的設置   勿動     -
# --------------------------------------
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: "${project_name}"
    version: "${project_version}"
  min_version: 2024.11.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio
    board_build.arduino.memory_type: qio_opi
    build_flags: "-DBOARD_HAS_PSRAM"
    board_upload.maximum_ram_size: 524288
  on_boot: 
    priority: 200
    then:
      - light.turn_on:
          id: display_backlight
          brightness: !lambda 'return id(backlight_brightness).state / 100.0;'

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: y
      CONFIG_ESP32S3_DATA_CACHE_64KB: y
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y

logger:
  level: DEBUG
  # baud_rate: 0

api:
  reboot_timeout: 0s
  port: 6053
  password: ''
  on_client_connected: 
    then: 
      - if: 
          condition: 
            lambda: !lambda |-
              return (0 == client_info.find("Home Assistant "));
          then: 
            - lvgl.widget.show: 
                - id: lbl_hastatus

  on_client_disconnected: 
    then: 
      - if: 
          condition: 
            lambda: !lambda |-
              return (0 == client_info.find("Home Assistant "));
          then: 
            - lvgl.widget.hide: 
                - id: lbl_hastatus


wifi:
  power_save_mode: none
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap: {}

web_server:
  version: 3
  port: 80

captive_portal:

ota:
  - platform: esphome

# --------------------------------------
# -            on board sensor
# --------------------------------------
sensor:
  - platform: uptime
    name: Uptime
    unit_of_measurement: "h"
    accuracy_decimals: 2
    filters:
      - lambda: return x / 3600;

  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_db
    update_interval: 60s
    internal: true
    entity_category: "diagnostic"

  - platform: copy
    source_id: wifi_signal_db
    id: wifi_signal_percentage
    icon: mdi:signal
    name: "WiFi Signal"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    on_value:
      - lvgl.label.update:
          id: lvgl_label_wifi_signal_percentage
          text: !lambda |-
            if (isnan(x)) {
              return "N/A";
            } else {
              char buffer[8];
              snprintf(buffer, sizeof(buffer), "%.0f%%", x);
              return std::string(buffer);
            }


debug:

text_sensor:
  - platform: debug
    reset_reason:
      name: "Reset Reason"
  - platform: wifi_info
    ip_address:
      name: "IP"      
      icon: "mdi:ip-outline"
    ssid:
      name: "SSID"
      icon: "mdi:router-wireless"
    mac_address:
      name: "MAC"
      icon: "mdi:lan"

button:
  - platform: restart
    name: "Restart"
    id: restart_btn
      