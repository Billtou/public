utility_meter:
  taipower_energy:  #建立一個可以儲存與歸零的功耗表
    unique_id: 38448d28-80f8-4e1f-98a8-735a06b82db3
    source: sensor.electricitymeter_pro_2_way_energy_sum   # 以下需要改成自家的id
    name: "taipower_energy"
  ct_01_energy:  #建立一個01-CT可以儲存與歸零的功耗表
    unique_id: 73048249-8f81-4c80-816f-e1b602c061dd
    source: sensor.breaker_energy_01
    name: "ct_01_energy"
  ct_02_energy:  #建立一個02-CT可以儲存與歸零的功耗表
    unique_id: eb17c58d-ac4a-429f-aef5-d46aaecc5f6f
    source: sensor.breaker_energy_02
    name: "ct_02_energy"
  ct_03_energy:  #建立一個03-CT可以儲存與歸零的功耗表
    unique_id: 8fe9e554-0a53-4f81-bc5d-e5e6c91d4cc9
    source: sensor.breaker_energy_03
    name: "ct_03_energy"
  ct_04_energy:  #建立一個04-CT可以儲存與歸零的功耗表
    unique_id: d016e32e-9285-428f-b98e-90d5478a324b
    source: sensor.breaker_energy_04
    name: "ct_04_energy"
  ct_05_energy:  #建立一個05-CT可以儲存與歸零的功耗表
    unique_id: 18bd45bd-d83f-474e-9025-ccf75100ed21
    source: sensor.breaker_energy_05
    name: "ct_05_energy"
  ct_06_energy:  #建立一個06-CT可以儲存與歸零的功耗表
    unique_id: 50a5c74f-ff05-416b-b216-6a58a1ff890a
    source: sensor.breaker_energy_06
    name: "ct_06_energy"
  ct_07_energy: #建立一個07-CT可以儲存與歸零的功耗表
    unique_id: cfb27c9a-3c4b-4f88-ab77-a07437a57a31
    source: sensor.breaker_energy_07
    name: "ct_07_energy"
  ct_08_energy: #建立一個08-CT可以儲存與歸零的功耗表
    unique_id: 00118856-e217-4666-81a4-ac2dc9a50188
    source: sensor.breaker_energy_08
    name: "ct_08_energy"
  ct_09_energy: #建立一個09-CT可以儲存與歸零的功耗表
    unique_id: 94bb8375-50f4-4f09-9b87-13a32ba1b07e
    source: sensor.breaker_energy_09
    name: "ct_09_energy"
  ct_10_energy: #建立一個10-CT可以儲存與歸零的功耗表
    unique_id: d28cf425-5b21-4392-806d-4b552e7a6074
    source: sensor.breaker_energy_10
    name: "ct_10_energy"
  ct_11_energy: #建立一個11-CT可以儲存與歸零的功耗表
    unique_id: 8ec5988d-32ea-4589-adcc-9eb3e0f5da9e
    source: sensor.breaker_energy_11
    name: "ct_11_energy"
  ct_12_energy: #建立一個12-CT可以儲存與歸零的功耗表
    unique_id: ac28758c-a072-49d8-b7bc-1781e3e96a4e
    source: sensor.breaker_energy_12
    name: "ct_12_energy"
  ct_13_energy: #建立一個13-CT可以儲存與歸零的功耗表
    unique_id: d533ef84-8b15-412f-a582-eb7e4d19df9d
    source: sensor.breaker_energy_13
    name: "ct_13_energy"
  ct_14_energy: #建立一個14-CT可以儲存與歸零的功耗表
    unique_id: 5d80c2d5-20c1-4752-86e3-78522dd3093a
    source: sensor.breaker_energy_14
    name: "ct_14_energy"
  ct_15_energy: #建立一個15-CT可以儲存與歸零的功耗表
    unique_id: 86adce87-db64-4230-a4e1-a0d8c9c3f77a
    source: sensor.breaker_energy_15
    name: "ct_15_energy"
  ct_16_energy: #建立一個16-CT可以儲存與歸零的功耗表
    unique_id: be5efa23-b481-4aa3-9fc1-2bbc261ec3bc
    source: sensor.breaker_energy_16
    name: "ct_16_energy"
  ct_17_energy: #建立一個17-CT可以儲存與歸零的功耗表
    unique_id: 02907509-c90a-4ad2-bd0e-c5e42a31a75c
    source: sensor.breaker_energy_17
    name: "ct_17_energy"
  ct_18_energy: #建立一個18-CT可以儲存與歸零的功耗表
    unique_id: 8ce10486-cee3-4f57-895b-c9cf145ff17c
    source: sensor.breaker_energy_18
    name: "ct_18_energy"


template:
  - sensor:
      - name: realtime_hour_cost  #建立一個及時計算每小時電費的sensor
        unique_id: 239010d0-fd00-4615-ab05-b8964563370e
        state: "{{((states.sensor.power_sum.state|float)/1000 *(states.sensor.count_kwh_cost.state|float))|round(1)}}"
        unit_of_measurement: "$"

      - name: count_kwh_cost   # 建立台電兩個月計算一次的電費收費的一度電單價
        unique_id: 2ca5f2b9-edb4-4b2a-b1aa-50607618df7c
        state: >
          {% set energy = states("sensor.taipower_energy") | float(0) %}
          {% set is_summer = now().month in [6,7,8,9] %}

          {% if energy < 120 %}
            {{ 1.68 }}
          {% elif energy < 330 %}
            {{ 2.45 if is_summer else 2.16 }}
          {% elif energy < 500 %}
            {{ 3.7 if is_summer else 3.03 }}
          {% elif energy < 700 %}
            {{ 5.04 if is_summer else 4.14 }}
          {% elif energy < 1000 %}
            {{ 6.24 if is_summer else 5.07 }}
          {% else %}
            {{ 8.46 if is_summer else 6.63 }}
          {% endif %}
        unit_of_measurement: "TWD/kWh"
        device_class: monetary

      - name: count_kwh_cost_storefront_3_bata  # 三段式時間電價每度用電成本
        unique_id: 40d73652-9231-4af6-85d9-d8c458dfc46e
        state: >
          {% set now_month = now().month %}
          {% set now_weekday = now().isoweekday() %}
          {% set now_hour = now().hour %}
          {% set is_summer = now_month in [6,7,8,9] %}
          {% set is_weekday = now_weekday in [1,2,3,4,5] %}
          
          {% if is_summer %}
            {% if is_weekday %}
              {% if now_hour < 8 %} 1.96
              {% elif now_hour < 16 %} 4.54
              {% elif now_hour < 22 %} 6.92
              {% else %} 4.54
              {% endif %}
            {% else %}
              1.96
            {% endif %}
          {% else %}
            {% if is_weekday %}
              {% if now_hour < 6 %} 1.89
              {% elif now_hour < 11 %} 4.43
              {% elif now_hour < 14 %} 1.89
              {% else %} 4.33
              {% endif %}
            {% else %}
              1.89
            {% endif %}
          {% endif %}
        unit_of_measurement: "TWD/kWh"
        device_class: monetary

      - name: count_kwh_cost_storefront_2_bata # 二段式時間電價每度用電成本
        unique_id: 6f06b6bf-8434-4812-8cd4-464296ed7e9b
        state: >
          {% set now_month = now().month %}
          {% set now_weekday = now().isoweekday() %}
          {% set now_hour = now().hour %}
          {% set is_summer = now_month in [6,7,8,9] %}
          {% set is_weekday = now_weekday in [1,2,3,4,5] %}

          {% if is_summer %}
            {% if is_weekday %}
              {% if now_hour < 9 %} 1.96
              {% else %} 5.01
              {% endif %}
            {% else %}
              1.96
            {% endif %}
          {% else %}
            {% if is_weekday %}
              {% if now_hour < 6 %} 1.89
              {% elif now_hour < 11 %} 4.78
              {% elif now_hour < 14 %} 1.89
              {% else %} 4.78
              {% endif %}
            {% else %}
              1.89
            {% endif %}
          {% endif %}
        unit_of_measurement: "TWD/kWh"
        device_class: monetary


      - name: count_power_cost  # 建立台電一般2個月計算一次的預估電費
        unique_id: f53b6ccf-becb-48ab-a473-80f239199ea8
        state: >
          {% set energy = states("sensor.taipower_energy") | float(0) %}
          {% set cost_per_kwh = states("sensor.kwh_cost") | float(0) %}
          {% set is_summer = now().month in [6,7,8,9] %}

          {% if energy < 120 %}
            {{ (energy * cost_per_kwh) | round(0) }}
          {% elif energy < 330 %}
            {{ ((energy - 120) * cost_per_kwh + 201.6) | round(0) }}
          {% elif energy < 550 and is_summer %}
            {{ ((energy - 330) * cost_per_kwh + 716.1) | round(0) }}
          {% elif energy < 700 and is_summer %}
            {{ ((energy - 550) * cost_per_kwh + 1530.1) | round(0) }}
          {% elif energy < 1000 and is_summer %}
            {{ ((energy - 700) * cost_per_kwh + 2286.1) | round(0) }}
          {% elif energy >= 1000 and is_summer %}
            {{ ((energy - 1000) * cost_per_kwh + 4158.1) | round(0) }}
          {% elif energy < 330 and not is_summer %}
            {{ ((energy - 120) * cost_per_kwh + 201.6) | round(0) }}
          {% elif energy < 700 and not is_summer %}
            {{ ((energy - 330) * cost_per_kwh + 665.2) | round(0) }}
          {% elif energy < 1000 and not is_summer %}
            {{ ((energy - 700) * cost_per_kwh + 1942.8) | round(0) }}
          {% elif energy >= 1000 and not is_summer %}
            {{ ((energy - 1000) * cost_per_kwh + 3463.8) | round(0) }}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "TWD"
        device_class: monetary
