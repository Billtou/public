template:
  - trigger:
      - platform: time_pattern
        minutes: /30 # 剛開始設置可以改1分鐘，一切穩定後請改30分鐘update一次  minutes: /30
      - platform: homeassistant
        event: start
    action:
      - delay: "00:01:00" #偏移1分鐘避免與CWB更新時間重疊
      - action: weather.get_forecasts
        data:
          # type: daily # 搭配cwa集成使用 與下一行二擇一
          type: hourly # 搭配cwa集成使用 與上一行二擇一
        target:
          entity_id: weather.opencwa_nan_tun_qu
        # response_variable: daily # 搭配cwa集成使用 與下一行二擇一
        response_variable: hourly # 搭配cwa集成使用 與上一行二擇一

    sensor:
      - name: Weather Interval
        unique_id: 08128e00-6b12-443a-9e9c-ad3f57ec2da9
        state: "{{ states('weather.opencwa_nan_tun_qu') }}"
        attributes:
          temperature: "{{ state_attr('weather.opencwa_nan_tun_qu', 'temperature') }}"
          templow: "{{state_attr('weather.opencwa_nan_tun_qu', 'templow')}}"
          dew_point: "{{ state_attr('weather.opencwa_nan_tun_qu', 'dew_point') }}"
          temperature_unit: "{{ state_attr('weather.opencwa_nan_tun_qu', 'temperature_unit') }}"
          humidity: "{{ state_attr('weather.opencwa_nan_tun_qu', 'humidity') }}"
          cloud_coverage: "{{ state_attr('weather.opencwa_nan_tun_qu', 'cloud_coverage') }}"
          pressure: "{{ state_attr('weather.opencwa_nan_tun_qu', 'pressure') }}"
          pressure_unit: "{{ state_attr('weather.opencwa_nan_tun_qu', 'pressure_unit') }}"
          wind_bearing: "{{ state_attr('weather.opencwa_nan_tun_qu', 'wind_bearing') }}"
          wind_speed: "{{ state_attr('weather.opencwa_nan_tun_qu', 'wind_speed') }}"
          wind_speed_unit: "{{ state_attr('weather.opencwa_nan_tun_qu', 'wind_speed_unit') }}"
          visibility_unit: "{{ state_attr('weather.opencwa_nan_tun_qu', 'visibility_unit') }}"
          precipitation_unit: "{{ state_attr('weather.opencwa_nan_tun_qu', 'precipitation_unit') }}"
          forecast: "{{ hourly['weather.opencwa_nan_tun_qu'].forecast }}"

  - sensor:
      - name: "eink_sensors"
        unique_id: 7d4a5b29-70c3-4fd0-9b8e-a79a3a3165d2
        state: >
          {{ states('weather.opencwa_nan_tun_qu') }}
        attributes:
          # 若溫溼度與體感要改自家的，與下一行二擇一
          today_temperature: >
            {{ states('sensor.opencwa_nan_tun_qu_temperature') | round }}°C
          # {{states('sensor.outside_temperature') | round }}°C
          today_humidity: >
            {{ states('sensor.opencwa_nan_tun_qu_humidity')}}
          # {{states('sensor.outside_humidity')| round}}
          today_feel_like: >
            {{ states('sensor.opencwa_nan_tun_qu_feels_like_temperature') | round }}°
          # {{states('sensor.my_feels_like')| round}}°
          today_uv_index: >
            {{states('sensor.openuv_current_uv_index')| round }}
          forecast_rain_precipitation: >
            {{states('sensor.opencwa_nan_tun_qu_forecast_precipitation_probability')| round }}
          forecast_rain_probability: >
            {{states('sensor.opencwa_nan_tun_qu_forecast_precipitation')| round }}
          today_wind_speed: >
            {{states('sensor.opencwa_nan_tun_qu_wind_speed')| round }}
          today_dew_point: >
            {{states('sensor.opencwa_nan_tun_qu_dew_point')| round }}
          forecast_weekday_1: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[1].datetime) | timestamp_custom('%a') }}
          forecast_condition_1: >
            {{ state_attr('sensor.weather_interval', 'forecast')[1].condition }}
          forecast_temperature_1: >
            {{ state_attr('sensor.weather_interval', 'forecast')[1].temperature | round }}°
          forecast_templow_1: >
            {{ state_attr('sensor.weather_interval', 'forecast')[1].templow | round }}°
          forecast_precipitation_probability_1: >
            {{ state_attr('sensor.weather_interval', 'forecast')[1].precipitation_probability | round }}%
          forecast_time_1: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[1].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[1].datetime) | timestamp_custom('%p') }}

          forecast_weekday_2: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[2].datetime) | timestamp_custom('%a') }}
          forecast_condition_2: >
            {{ state_attr('sensor.weather_interval', 'forecast')[2].condition }}
          forecast_temperature_2: >
            {{ state_attr('sensor.weather_interval', 'forecast')[2].temperature | round }}°
          forecast_templow_2: >
            {{ state_attr('sensor.weather_interval', 'forecast')[2].templow | round }}°
          forecast_precipitation_probability_2: >
            {{ state_attr('sensor.weather_interval', 'forecast')[2].precipitation_probability | round }}%
          forecast_time_2: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[2].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[2].datetime) | timestamp_custom('%p') }}

          forecast_weekday_3: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[3].datetime) | timestamp_custom('%a') }}
          forecast_condition_3: >
            {{ state_attr('sensor.weather_interval', 'forecast')[3].condition }}
          forecast_temperature_3: >
            {{ state_attr('sensor.weather_interval', 'forecast')[3].temperature | round }}°
          forecast_templow_3: >
            {{ state_attr('sensor.weather_interval', 'forecast')[3].templow | round }}°
          forecast_precipitation_probability_3: >
            {{ state_attr('sensor.weather_interval', 'forecast')[3].precipitation_probability | round }}%
          forecast_time_3: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[3].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[3].datetime) | timestamp_custom('%p') }}

          forecast_weekday_4: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[4].datetime) | timestamp_custom('%a') }}
          forecast_condition_4: >
            {{ state_attr('sensor.weather_interval', 'forecast')[4].condition }}
          forecast_temperature_4: >
            {{ state_attr('sensor.weather_interval', 'forecast')[4].temperature | round }}°
          forecast_templow_4: >
            {{ state_attr('sensor.weather_interval', 'forecast')[4].templow | round }}°
          forecast_precipitation_probability_4: >
            {{ state_attr('sensor.weather_interval', 'forecast')[4].precipitation_probability | round }}%
          forecast_time_4: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[4].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[4].datetime) | timestamp_custom('%p') }}

          forecast_weekday_5: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[5].datetime) | timestamp_custom('%a') }}
          forecast_condition_5: >
            {{ state_attr('sensor.weather_interval', 'forecast')[5].condition }}
          forecast_temperature_5: >
            {{ state_attr('sensor.weather_interval', 'forecast')[5].temperature | round }}°
          forecast_templow_5: >
            {{ state_attr('sensor.weather_interval', 'forecast')[5].templow | round }}°
          forecast_precipitation_probability_5: >
            {{ state_attr('sensor.weather_interval', 'forecast')[5].precipitation_probability | round }}%
          forecast_time_5: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[5].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[5].datetime) | timestamp_custom('%p') }}

          forecast_weekday_6: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[6].datetime) | timestamp_custom('%a') }}
          forecast_condition_6: >
            {{ state_attr('sensor.weather_interval', 'forecast')[6].condition }}
          forecast_temperature_6: >
            {{ state_attr('sensor.weather_interval', 'forecast')[6].temperature | round }}°
          forecast_templow_6: >
            {{ state_attr('sensor.weather_interval', 'forecast')[6].templow | round }}°
          forecast_precipitation_probability_6: >
            {{ state_attr('sensor.weather_interval', 'forecast')[6].precipitation_probability | round }}%
          forecast_time_6: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[6].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[6].datetime) | timestamp_custom('%p') }}

          forecast_weekday_7: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[7].datetime) | timestamp_custom('%a') }}
          forecast_condition_7: >
            {{ state_attr('sensor.weather_interval', 'forecast')[7].condition }}
          forecast_temperature_7: >
            {{ state_attr('sensor.weather_interval', 'forecast')[7].temperature | round }}°
          forecast_templow_7: >
            {{ state_attr('sensor.weather_interval', 'forecast')[7].templow | round }}°
          forecast_precipitation_probability_7: >
            {{ state_attr('sensor.weather_interval', 'forecast')[7].precipitation_probability | round }}%
          forecast_time_7: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[7].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[7].datetime) | timestamp_custom('%p') }}

          forecast_weekday_8: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[8].datetime) | timestamp_custom('%a') }}
          forecast_condition_8: >
            {{ state_attr('sensor.weather_interval', 'forecast')[8].condition }}
          forecast_temperature_8: >
            {{ state_attr('sensor.weather_interval', 'forecast')[8].temperature | round }}°
          forecast_templow_8: >
            {{ state_attr('sensor.weather_interval', 'forecast')[8].templow | round }}°
          forecast_precipitation_probability_8: >
            {{ state_attr('sensor.weather_interval', 'forecast')[8].precipitation_probability | round }}%
          forecast_time_8: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[8].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[8].datetime) | timestamp_custom('%p') }}

          forecast_weekday_9: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[9].datetime) | timestamp_custom('%a') }}
          forecast_condition_9: >
            {{ state_attr('sensor.weather_interval', 'forecast')[9].condition }}
          forecast_temperature_9: >
            {{ state_attr('sensor.weather_interval', 'forecast')[9].temperature | round }}°
          forecast_templow_9: >
            {{ state_attr('sensor.weather_interval', 'forecast')[9].templow | round }}°
          forecast_precipitation_probability_9: >
            {{ state_attr('sensor.weather_interval', 'forecast')[9].precipitation_probability | round }}%
          forecast_time_9: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[9].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[9].datetime) | timestamp_custom('%p') }}

          forecast_weekday_10: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[10].datetime) | timestamp_custom('%a') }}
          forecast_condition_10: >
            {{ state_attr('sensor.weather_interval', 'forecast')[10].condition }}
          forecast_temperature_10: >
            {{ state_attr('sensor.weather_interval', 'forecast')[10].temperature | round }}°
          forecast_templow_10: >
            {{ state_attr('sensor.weather_interval', 'forecast')[10].templow | round }}°
          forecast_precipitation_probability_10: >
            {{ state_attr('sensor.weather_interval', 'forecast')[10].precipitation_probability | round }}%
          forecast_time_10: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[10].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[10].datetime) | timestamp_custom('%p') }}

          forecast_weekday_11: >
            {{as_timestamp(state_attr('sensor.weather_interval', 'forecast')[11].datetime) | timestamp_custom('%a') }}
          forecast_condition_11: >
            {{ state_attr('sensor.weather_interval', 'forecast')[11].condition }}
          forecast_temperature_11: >
            {{ state_attr('sensor.weather_interval', 'forecast')[11].temperature | round }}°
          forecast_templow_11: >
            {{ state_attr('sensor.weather_interval', 'forecast')[11].templow | round }}°
          forecast_precipitation_probability_11: >
            {{ state_attr('sensor.weather_interval', 'forecast')[11].precipitation_probability | round }}%
          forecast_time_11: >
            {{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[11].datetime) | timestamp_custom('%I') | int }}{{ as_timestamp(state_attr('sensor.weather_interval', 'forecast')[11].datetime) | timestamp_custom('%p') }}

      - name: eink_next_rising
        unique_id: 404907c7-4326-4583-967b-dea7d88a1607
        state: >
          {{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom ("%H:%M") }}

      - name: eink_next_sunset
        unique_id: 3ecf6a10-c665-46bb-9f53-55fe18752e64
        state: >
          {{ as_timestamp(states.sun.sun.attributes.next_dawn) | timestamp_custom ("%H:%M") }}

      - name: eink_moon_phase
        unique_id: c4253e80-fbfc-4875-b35d-9487e1c212c3
        state: >
          {{states('sensor.moon_phase')}}

      - name: my_feels_like
        unique_id: 5e0e6fc9-d463-4f5e-9cac-1e9f0a57ee8d
        state: >
          {% set T = ((states.sensor.outside_temperature.state|float)*1.8)+32 %}
          {% set RH = states.sensor.outside_humidity.state|float %}
          {% set STEADMAN_HI = 0.5 * (T + 61.0 + ((T-68.0)*1.2) + (RH*0.094)) %}
          {% if STEADMAN_HI >= 80 %}
            {% set ROTHFUSZ_HI = -42.379 + 2.04901523*T + 10.14333127*RH - 0.22475541*T*RH - 0.00683783*T*T - 0.05481717*RH*RH + 0.00122874*T*T*RH + 0.00085282*T*RH*RH - 0.00000199*T*T*RH*RH %}
            {% set HI = ROTHFUSZ_HI %}
            {% if RH < 13 and 80 < T < 112 %}
              {% set ADJUSTMENT = ((13-RH)/4)*((17-(T-95)|abs)/17)**0.5 %}
              {% set HI = HI - ADJUSTMENT %}
            {% elif RH > 85 and 80 < T < 87 %}
              {% set ADJUSTMENT = ((RH-85)/10) * ((87-T)/5) %}
              {% set HI = HI + ADJUSTMENT %}
            {% endif %}
          {% else %}
            {% set HI = STEADMAN_HI %}
          {% endif %}
          {% set HI_C = (HI-32)/1.8 %}
          {{- HI_C|round(1) -}}

  # - sensor:
  #     - platform: time_date
  #       display_options:
  #         - "time"
  #         - "date"
  #         - "date_time"
  #         - "date_time_utc"
  #         - "date_time_iso"
  #         - "time_date"
  #         - "time_utc"
